function [] = generateDeltaPlot(cellinfo, cellindices, fileName, ... 
    outputDirName, scaleValues)
%cellinfo : object as generated by generateNPCgraph
%cellindices : indices of cells to show (no more than 25) from the cellinfo
%object
%fileName : name of file being processed (originally supplied to
%generateNPCgraph)
%outputDirName : name of output directory where image is to be saved, as
%used in engine.m
%scaleValues : logical -- should we scale all the stacked graph's axes to
%the max and min values seen in the entire set of delta F / F0 values?

%Generate delta plot -- using the delta F / F0 for cells identified with
%indices in "cellindices", generate trendlines. 

%give me the deltaF values for all the cells with the specified indices
% This is stored in p of cellinfo(n,o,p) for cell n, where o=3.
%get delta values as columns, one column per indexed cell, in a 2D array.
deltaValues = squeeze(cellinfo(cellindices,3,:));
%for stackedplot, we need data in columns
deltaValues = deltaValues'; 
frames = 1:size(deltaValues, 1); 
% string array of empty strings so we don't show our bogus column names
labels = num2str(cellindices'); 
%generate scaling factors so we don't have to do it in the loop
deltaFlat = deltaValues(:); %flatten so we can get overall min/max
deltaMin = min(deltaFlat); 
deltaMax = max(deltaFlat); 
%build plots in groups of n
n = 10
currentPlot = 1; %because someone already used 'plot_idx', cough cough
for i=1:10:size(deltaValues,2)
    figure('visible', 'off');
    set(gcf, 'color', 'w');
    set(gcf, 'PaperUnits', 'inches');
    set(gcf, 'PaperSize', [6 2]);
    s = stackedplot(frames, deltaValues(:,i:min(i+n-1, size(deltaValues,2))), ... 
        'DisplayLabels', cellstr(labels(i:min(i+n-1, size(labels, 1)),:))); 
    if(scaleValues)
        % set common y limits for our stacked graphs
        for j=1:length(s.AxesProperties)
            s.AxesProperties(j).YLimits = [deltaMin deltaMax]; 
        end
    end
    % copied from the generatePlots code
    [filepath,name,ext] = fileparts(fileName);
    %only add a "_2" to the end if we have more than one graph
    outputFileName = sprintf('%s%s%s_deltaF_F0', outputDirName, filesep, name); 
    if currentPlot > 1
       outputFileName = strcat(outputFileName, '_', num2str(currentPlot)); 
    end
    print(outputFileName,'-dtiffn')
    currentPlot = currentPlot + 1; 
end
end

